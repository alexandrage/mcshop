<?php
namespace McShop\FinanceBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Symfony\Component\Form\FormInterface;

/**
 * CouponRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CouponRepository extends EntityRepository
{
    const RETURN_QUERY = 0;
    const RETURN_RESULT = 1;

    public function findWithFilters(FormInterface $form, $resultType = self::RETURN_RESULT)
    {
        $qb = $this->createQueryBuilder('c');
        $qb
            ->select('c, u')
            ->leftJoin('c.activatedBy', 'u')
        ;

        if ($form->get('amount')->getData() !== null) {
            $qb->andWhere($qb->expr()->eq('c.amount', $form->get('amount')->getData()));
        }

        if ($form->get('dueDate')->getData() !== null) {
            $qb->andWhere($qb->expr()->eq('c.dueDate', $form->get('dueDate')->getData()));
        }

        if ($form->get('activatedAt')->getData() !== null) {
            $qb->andWhere($qb->expr()->eq('c.activatedAt', $form->get('activatedAt')->getData()));
        }

        if ($form->get('activatedBy')->getData() !== null) {
            $qb
                ->andWhere('u.username LIKE :username')
                ->setParameter('username', $form->get('activatedBy')->getData())
            ;
        }

        if ($form->get('active')->getData() !== null) {
            $qb->andWhere($qb->expr()->eq('c.active', $form->get('active')->getData()));
        }

        switch ($resultType) {
            case self::RETURN_RESULT:
                return $qb->getQuery()->execute();
            case self::RETURN_QUERY:
                return $qb;
        }

        return null;
    }
}
